<?xml version="1.0" encoding="utf-8" ?>
<project name="gwtpsamplespring" default="build" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
  <property environment="env"/>
  
  <!--
  	Configure path to GWT SDK
  	Requires: gwt-dev.jar, gwt-user.jar and gwt-servlet.jar
  	Unfortunately Maven repository isn't the most up to date
  	(Use eclipse provided libs).
  -->
  <property name="gwt.sdk" location="compile/gwt-2.5.1" />
  
  <!--  Ivy setup -->
  <property name="ivy.install.version" value="2.3.0" />
  <condition property="ant.home" value="${env.IVY_HOME}">
    <isset property="env.IVY_HOME" />
  </condition>
  
  <property name="ant.home" value="${user.home}/.ant" />
  <property name="ivy.jar.dir" value="${ant.home}/lib" />
  <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />
  <property name="libs.path" value="${user.home}/.ivy2/libs" />
  
  <!-- loading our ivy-settings file, with our own resolvers declarations -->
  <ivy:settings file="ivy-settings.xml" id="ivy.instance" />
  
  <target name="download-ivy" unless="offline">
    <mkdir dir="${ivy.jar.dir}" />
    <!-- download Ivy from web site so that it can be used even without any special installation -->
    <get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true" />
  </target>
  
  <target name="init-ivy" depends="download-ivy">
    <!--
      try to load ivy here from ivy home, in case the user has not already 
      dropped it into ant's lib dir (note that the latter copy will always 
      take precedence). We will not fail as long as local lib dir exists (it 
      may be empty) and ivy is in at least one of ant's lib dir or the local 
      lib dir. 
    -->
    <path id="ivy.lib.path">
      <fileset dir="${ivy.jar.dir}" includes="*.jar" />
    </path>
    <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" />
  </target>
  
  <target name="resolve" depends="init-ivy" description="Retrieve dependencies with ivy">
  	<delete dir="${libs.path}/${ant.project.name}" failonerror="false" />
  	<mkdir dir="${libs.path}/${ant.project.name}" />
    <ivy:retrieve pattern="${libs.path}/${ant.project.name}/[conf]/[artifact]-[type]-[revision].[ext]" />
  </target>
  
  <target name="report" depends="resolve" description="Report Ivy resolve output">
  	<mkdir dir="ivy/report" />
  	<ivy:report todir="ivy/report" />
  </target>
  
  <target name="libs" depends="resolve" description="Copy libs to WEB-INF/lib">
    <delete dir="war/WEB-INF/lib" failonerror="false" />
    <mkdir dir="war/WEB-INF/lib" />
    <copy todir="war/WEB-INF/lib">
      <fileset dir="${libs.path}/${ant.project.name}/war" includes="**/*.jar" />
    </copy>
    <copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet.jar" />
  </target>
  
  <path id="project.class.path">
    <pathelement location="war/WEB-INF/classes" />
    <fileset dir="war/WEB-INF/lib" includes="**/*.jar"/>
    <fileset dir="${gwt.sdk}" includes="gwt-*.jar"/>
  </path>
  
  <target name="javac" depends="libs" description="Compile java source">
    <mkdir dir="war/WEB-INF/classes" />
    <javac srcdir="src" includes="**" encoding="utf-8" destdir="war/WEB-INF/classes" source="1.7" target="1.7"
    	nowarn="true" debug="true" debuglevel="lines,vars,source" includeantruntime="false">
      <classpath refid="project.class.path" />
    </javac>
    <copy todir="war/WEB-INF/classes">
      <fileset dir="src" excludes="**/*.java" />
    </copy>
  </target>

  <target name="gwtc" depends="javac" description="GWT compile to JavaScript">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler" maxmemory="512m">
      <classpath>
        <pathelement location="src"/>
        <path refid="project.class.path"/>
      </classpath>
      <!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
      <jvmarg value="-Xmx512M"/>
      <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
      <arg value="com.test.Gwtpsamplespring"/>
    </java>
  </target>
  
  <target name="build" depends="gwtc" description="Build web application entry point"/>

  <target name="war" depends="build" description="Create a war file">
    <zip destfile="${ant.project.name}.war" basedir="war"/>
  </target>

  <target name="clean" description="Cleans this project">
  	<delete dir="war/WEB-INF/lib" failonerror="false" />
    <delete dir="war/WEB-INF/classes" failonerror="false" />
    <delete dir="war/${ant.project.name}" failonerror="false" />
  </target>

</project>
